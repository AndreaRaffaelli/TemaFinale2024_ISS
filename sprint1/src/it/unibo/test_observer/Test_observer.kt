/* Generated by AN DISI Unibo */ 
package it.unibo.test_observer

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Test_observer ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 var unloaded = false  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outyellow("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						delay(500) 
						observeResource("localhost","8022","ctxservicearea","wis","info")
						observeResource("localhost","8022","ctxservicearea","oprobot","info")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t022",targetState="end",cond=whenDispatch("info"))
				}	 
				state("end") { //this:State
					action { //it:State
						CommUtils.outred("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						if( checkMsgContent( Term.createTerm("info(X,Y,Z)"), Term.createTerm("info(SRC,VAL,VAR)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 
											val SRC = payloadArg(0)
											val VAR = payloadArg(1)
											val VAL = payloadArg(2)
								CommUtils.outred("$name views $SRC $VAR $VAL")
								 
											if (SRC.equals("oprobot") && VAR.equals("MentalState")&& VAL.equals("ASHOUT")) {
												unloaded = true	
											}
											if (SRC.equals("wis") && VAR.equals("As_status")&& VAL.equals("half") && unloaded==true) {
												System.exit(31);
											} 
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t023",targetState="end",cond=whenDispatch("info"))
				}	 
			}
		}
} 
